apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: deploy-s3-bucket
  title: Deploy New S3 Bucket
  description: Creates all the neccesary resources in AWS for deploying an S3 bucket.
  tags:
    - aws
    - s3
spec:
  owner: web@example.com
  type: service
  parameters:
    # First page
    - title: Provide some simple information
      required:
        - system
        - service
        - description
        - owner
      properties:
        system:
          title: System
          type: string
          description: System the new S3 bucket belongs to.
          ui:field: EntityPicker
          ui:options:
            catalogFilter:
              - kind: System
            defaultKind: System # Necessary for options to show as "system-name" and not "default/system-name"
            # defaultNamespace: default

        service:
          title: Name
          type: string
          description: Unique name of the new S3 bucket.
          ui:field: EntityNamePicker

        description:
          title: Description
          type: string
          description: Help others understand what this bucket is for.
          minLength: 10

          # TESTING
          # ui:autocomplete: probando-esto

        owner:
          title: Owner
          type: string
          description: Owner of the service
          ui:field: OwnerPicker
          ui:options:
            # allowedKinds: # DEPRACATED
            #   - Group
            catalogFilter:
              - kind: Group
                spec.type: team # You can make it more specific by adding more filters like this
    
    # Second page
    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com

  steps:
    # - id: fetch-base-code
    #   name: Fetch Base Code
    #   action: fetch:template
    #   input:
    #     url: ./base-code
    #     targetPath: application-code/${{ parameters.system }}/${{ parameters.service }}
    #     values:
    #       system: ${{ parameters.system }}
    #       service: ${{ parameters.service }}
    #       description: ${{ parameters.description }}
    #       owner: ${{ parameters.owner }}
          # tags: ['nodejs', 'example-tag2', 'example-tag3']
          # tags:
          #   - hard-coded-tag1
          #   - hard-coded-tag2

    - id: fetch-manifests
      name: Fetch Manifests
      action: fetch:template
      input:
        url: ./manifests
        targetPath: helm-charts/infra/crossplane-managed-resources/s3-buckets/${{ parameters.system }}-${{ parameters.service }}-s3-bucket
        values:
          system: ${{ parameters.system | split('/')[1] }}
          # system: ${{ parameters.system }}
          service: ${{ parameters.service }}

    - id: fetch-catalog-info
      name: Fetch Catalog Info
      action: fetch:template
      input:
        url: ./catalog-info
        targetPath: helm-charts/infra/crossplane-managed-resources/s3-buckets/${{ parameters.system }}-${{ parameters.service }}-s3-bucket/backstage
        values:
          system: ${{ parameters.system | split('/')[1] }}
          # system: ${{ parameters.system }}
          service: ${{ parameters.service }}

    # - id: fetch-argocd-applications
    #   name: Fetch ArgoCD application manifests
    #   action: fetch:template
    #   input:
    #     url: ./argocd-applications
    #     targetPath: argo-cd/applications/systems/${{ parameters.system }}/${{ parameters.service }}
    #     values:
    #       system: ${{ parameters.system }}
    #       service: ${{ parameters.service }}

    # - id: fetch-github-workflow
    #   name: Fetch GitHub Workflow
    #   action: fetch:template
    #   input:
    #     url: ./github-workflow
    #     targetPath: .github/workflows
    #     values:
    #       system: ${{ parameters.system }}
    #       service: ${{ parameters.service }}

    - id: publish
      name: Publish
      action: publish:github:pull-request
      input:
        allowedHosts: ['github.com']
        repoUrl: ${{ parameters.repoUrl }}
        # title: "Create new S3 bucket: ${{ parameters.system | split('/')[1] }}-${{ parameters.service }}"
        title: "Create new S3 bucket: ${{ parameters.system }}-${{ parameters.service }}"
        # branchName: create-s3-bucket-${{ parameters.system | split('/')[1] }}-${{ parameters.service }}
        # branchName: create-s3-bucket-${{ parameters.system }}-${{ parameters.service }}
        branchName: create-s3-bucket--${{ parameters.service }}
        description: |
          New S3 Bucket: ${{ parameters.system }}-${{ parameters.service }}
          # New S3 Bucket: ${{ parameters.system | split('/')[1] }}-${{ parameters.service }}

          ${{ parameters.description if parameters.description }}
        targetPath: "" # Leave empty to use the root of the repo or specify if needed
        # paths: 
          # - application-code/${{ parameters.system }}/${{ parameters.service }}
          # - helm-charts/systems/${{ parameters.system }}/${{parameters.service}}
          # - argo-cd/applications/systems/${{ parameters.system }}/${{ parameters.service }}
          # - .github/workflows


  output:
    links:
      - url: ${{ steps.publish.output.remoteUrl }}
        title: "Go to PR"
