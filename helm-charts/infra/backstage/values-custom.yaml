backstage:
  command: ["node", "packages/backend", "--config", "app-config.production.yaml"]

  image:
    registry: "" # This is necessary to override the default value "ghcr.io"
    repository: tferrari92/backstage
    tag: "16" # This value was modified by the backstage build and push pipeline

  extraEnvVars:
    - name: GITHUB_TOKEN
      valueFrom:
        secretKeyRef:
          name: github-secret
          key: GITHUB_TOKEN
    - name: AUTH_GITHUB_CLIENT_ID
      valueFrom:
        secretKeyRef:
          name: github-secret
          key: AUTH_GITHUB_CLIENT_ID
    - name: AUTH_GITHUB_CLIENT_SECRET
      valueFrom:
        secretKeyRef:
          name: github-secret
          key: AUTH_GITHUB_CLIENT_SECRET  
    - name: ARGOCD_AUTH_TOKEN
      valueFrom:
        secretKeyRef:
          name: argocd-auth-token
          key: ARGOCD_AUTH_TOKEN
    - name: GRAFANA_TOKEN
      valueFrom:
        secretKeyRef:
          name: grafana-token
          key: GRAFANA_TOKEN

  appConfig:
    catalog:
      rules:
        - allow:
            - Component
            - API
            - Resource
            - System
            - Domain
            - Location
            - User
            - Group
            - Template

      refreshIntervalSeconds: 5 # In seconds. Default is 100

      providers:
        github:
          # Catalogs
          catalogsProvider:
            organization: 'tomasferrarisenda' # This value was modified by the initial-setup script
            catalogPath: '/application-code/**/*catalog-info.yaml' # this will search all folders for files that end in template.yaml
            filters:
              branch: 'main' # string
              repository: 'automate-all-the-things-transcendence' # Regex
            schedule: # same options as in TaskScheduleDefinition
              frequency: { minutes: 1 }
              timeout: { minutes: 3 }

          # Resources
          resourcesProvider:
            organization: 'tomasferrarisenda' # This value was modified by the initial-setup script
            catalogPath: '/crossplane-example-manifests/**/*catalog-info.yaml' # this will search all folders for files that end in template.yaml
            # catalogPath: '/application-code/**/*catalog-info.yaml' # this will search all folders for files that end in template.yaml
            filters:
              branch: 'main' # string
              repository: 'automate-all-the-things-transcendence' # Regex
            schedule: # same options as in TaskScheduleDefinition
              frequency: { minutes: 1 }
              timeout: { minutes: 3 }

          # APIs
          apisProvider:
            organization: 'tomasferrarisenda' # This value was modified by the initial-setup script
            catalogPath: '/application-code/**/*api-info.yaml' # this will search all folders for files that end in template.yaml
            filters:
              branch: 'main' # string
              repository: 'automate-all-the-things-transcendence' # Regex
            schedule: # same options as in TaskScheduleDefinition
              frequency: { minutes: 1 }
              timeout: { minutes: 3 }

          # Templates
          templatesProvider:
            organization: 'tomasferrarisenda' # This value was modified by the initial-setup script
            catalogPath: '/backstage/entities/templates/**/*template.yaml' # this will search all folders for files that end in template.yaml
            filters:
              branch: 'main' # string
              repository: 'automate-all-the-things-transcendence' # Regex
            schedule: # same options as in TaskScheduleDefinition
              frequency: { minutes: 1 }
              timeout: { minutes: 3 }

          # Systems
          systemsProvider:
            organization: 'tomasferrarisenda' # This value was modified by the initial-setup script
            catalogPath: '/backstage/entities/systems/**/*.yaml' # this will search all folders for files that end in .yaml
            filters:
              branch: 'main' # string
              repository: 'automate-all-the-things-transcendence' # Regex
            schedule: # same options as in TaskScheduleDefinition
              frequency: { minutes: 1 }
              timeout: { minutes: 3 }

          # Groups
          groupsProvider:
            organization: 'tomasferrarisenda' # This value was modified by the initial-setup script
            catalogPath: '/backstage/entities/groups/**/*.yaml' # this will search all folders for files that end in .yaml
            filters: # optional filters
              branch: 'main' # optional string
              repository: 'automate-all-the-things-transcendence' # optional Regex
            schedule: # same options as in TaskScheduleDefinition
              frequency: { minutes: 1 }
              timeout: { minutes: 3 }

          # Users
          usersProvider:
            organization: 'tomasferrarisenda' # This value was modified by the initial-setup script
            catalogPath: '/backstage/entities/users/**/*.yaml' # this will search all folders for files that end in .yaml
            filters: # optional filters
              branch: 'main' # optional string
              repository: 'automate-all-the-things-transcendence' # optional Regex
            schedule: # same options as in TaskScheduleDefinition
              frequency: { minutes: 1 }
              timeout: { minutes: 3 }


githubToken: AgB+Wn3HsAjctfgkVAVoU4bHEg8vRibXqzfzudCUo6R4iuLRTtk7s42rrPEvGtArRtZpvp03pKd9+sHAz9hLY6fRoF9RR9ljVNknIBDT3XWgPajP5eto6k2DN7+ufmcTutdqs81jR21w3oNsW+jA7m+/pwL+bMV1LELmjpvxjcCluq0wfxYCWAUifJO9TFqHG/2PzpjG88WrrPW7grHZl+/RMWb/5EMRER4nEkMv2ajedYrzxNqRzxZ9y+8ajfhQTkVOg0gAwJf+g2l0j8pBhaoSIrW1rgKN0ce/XcI3JYBocjY5i8Ug9B2KNyd7fHzZpOCyudFhdPY4XTVTtLhBtEe98FydibxHuCu49aeIJNufGGB2AS1jAlJKd1GnaXQdB+7nLrR2cUp1Sn7m6ZpNeq1O470fhIOPodiTHpY4dF2WqensQdjrhhpDJaZ1qE8D54YlBfSM1ZAMW1pTscdK031z6fmEF7ylBfAwk15EFEYLhZqxOXH3IsoV9dPQrhgx80lgyblV0dMu3kqKOw+9718SyT8xinaLX5WhrAPVU3dkMLcTiZAHISRvgjOwRHXJ+xd3ADAqDUqvJa2LEplWNfUKK1/8WigJ6XWIl1/Vdmcf7om+EJM6OdFpuxeHMYgj08ade2VSIAT9JKC+UbLXLVHEYif9ISzSBQO7M7dAPmBCA2SLcp1k766t+/M2M6zz2xBwFCJ6aTwJAym//AzeGEnQael76AhOPi7cAzP6wIcCoYHwtIMsmCTG # This value was modified by the sealed-secrets pipeline
githubAuthClientId: AgBs3qDDARrOzoC3CwVMFFa/G7rVQmiE/JjbdWogpKVUUhIP5632doF99eJgXp2/m7ckU17PRz/qZCSI4Trry6A+mtVln1Cjr3btumGM7BcIZJsqDyDRUaKk+5bt+1HZRslE5aa2vH6nXlHPCQRNUtd9zs/h4y7zshhPviWEI+1TNg7PZHuCYLjsuZs0MIbhFuf03lkIge9ua5v9AlOksRsKMctV3EvzSSqdM4PBfH8M64ou+y0+QvA6boydu2d66iwJKApXH3j4kjhJHyKOoMboxf9knsk2UMtP3V0hhi96R10iYHYNcEjfN94jS3ZeYSlN6BOpztSRHmaGH0Cuv6M/zd9au7LCS0ijrb15+CsmLRTsNGel3xSsQSoYaFbtqbJAkufjp2LTeeWvwEQp6CDToFJ1R72RptuCQoSuylGtIDdg9GCg/zDRCZs+zCyhZ+/ilz7TGdYbgrlPVMsckHQwVcBBKjUve3rCfQHWvH1qkpca/RnDxwAhHwjZvHkk0mq7Th5m6+32Tm/oz777o+p5kRjGczqAZWgSl+SYY8PWzqYcEAIICsDMQqxNArGJPICZFy9ghauCBzIUEecIC1UwmHldexf3Ur+sjMXMi/F166Yf+fPh4eiAQIIwoa1sbfv3f5kvzgaGbGVhZk+jrUZwa5znsPWyiKmwngZQkFpKgEVMLOio5P9KCct8Q/rw9nDTC2/uEAomcXq07BIuX3Dt6imrNA== # This value was modified by the sealed-secrets pipeline
githubAuthClientSecret: AgAE46IvRcqfpA3ehF9CJ1rfT3JZHvP6ZCuJH7C8x4rWNTPIX7xxV4zWpzZdPYE8FKJrz6nkBxttMWQNZVSc6ahKoY58OKXa0ZOIhO/OaY5KG1r4okIVkJ17myKPBS+E5m8gBH7onGf6bv9dVwu9taFNknYadip2TCH//I30CscYtb/I9qx6OOBxw8usMN91BG9XN/VnXWPEy51U12ejiqA7FSYmVPL2XdPN2rTFTiXy9WL1tl8JC7R2Anaihgdn91egq92F631PjnijCrn5wL+Sqj620Ix6S/kahMl9ZQw6xRMFffFnkVpb9QrOq6b4pGf4nnFpuHfMgYirMz+sPXpg/hgUjcyUzpRl9fG21B+P1QCxaVQn3/yJoVp8LnXqfvnelv4Bd4NQVyxgEItPLK6gJFIMS35rw9D+TOkJkVB1CohyiW8O9r6fHGk7RFY8w/TPw6JtA5t847tmrsoRYrqoXO+yIaRtYAiZim3hpy3QuOoEJvDlwfELwxuw5LNI4H9wVdSk7mcI8+KLqkv/UkzClGw55NivhEVomIApssUnrAT4kstNRo0R4T3BzqZAQKJpinFaTnD8aKAddH3X2AC9+cx1VgiqwcftruCN04b9cR9SBfl3BK3K6H3WVKYRpy1hyzlohBqVBd8WV/cM1zT46kmwhJUfTaJ9qM39AlV7LT9GT9QQ8a70cNO32Yv3Zy+CGuvl6hTuFYP0Jlj/I46mMMObfL78+CkwzqS9m1b1+PIGjcJ+qZEi # This value was modified by the sealed-secrets pipeline

argocdAuthToken: AgCzQvBULc0cwp7UvS1tu1QqMkgSRfgD0Xypy4/IW5kjv+xVr7fHiDQBomzsyro25uGkx2FBMRGzBh9kZ+M7T7kqVXxnTTBlDtAAPUJjP4yzJUURsg7pf1kA5K4w1wwPmNKP+okwdpRPR8H8GFOnTXMvv4PkbfBOj3nA3R0mQ4gZS9qoKhqScQDVRNZxGuQLXVr+Yu4/BVhugeJoMzuLyFV962VtVRthvRqTeBp3Acn/VJcMYFFET8THr5SP/AA1ctl2GUWnqodJ2eSiEO/0XKb4Y+qzL1eYpVYiAS3T6EL3e4hZ0QJYLDTEdEeJEY2cg+Nrpx4sVU1axGc+AUUAlaCyAFSBDkrN0k6bZfVnygyocCDliZItr/TX/ApU331ynTJKAiHeDCeoCHvizypSaMQvF3ibGqwTYygtoZ0YIwU3bXQbrwE+NQSlaKPNVS4DFtxl7HB9MdQMQ4XZqOULRgAhJW/rjkw8ZhKgmE/Fp3QP9X9PXPLXBuSTspp7un3+Hwh8yVOQfsQvtqC2i/gre3WUfvI5duuIlQ5F0dS8DCUp/2a033evXsa4BTJq3lECr+UWoV5/RWOqlWdBBLRyOszO/kRfSssiUbYXPUa64Ov/+YvC1eTN7AxGrsSejqxbHuzuXkc9YHPWWQ2+pNSVlYNqUkCxfiuG8YIMmJdTt9oI/DKHqgGEhBNKKSp7vk0kb8TycmZzF9Y+5//vdGZw2Kd1B8O3RXut7IIu8sh/WA4o0NP0jO7etWI1BlkLApd408xphT146fLJ/JdUhEOSRHWYNJqyQ1ECF0fAwam9JKuSm4dib0YQH44DhZX06bEhXJOc99+WyYxkCzXHHsL2OUFR71EDUIswOkvepZPkvKdg4TLg54KAzZ0V9RnteCndG5C4UbKNu5hPc4GYy+av57MdXV3LZVbemdXzJD/pwXWkXygEkoElFXXXz5pHeuWafmNMdZysc/TSC8CZ3ojzI465JDbfNIc/gqVGt5MLVcnebqUNh1cH/XPaz4jUpiYfrFwl/mhckmLEmD+zpIQ= # This value was modified by the sealed-secrets pipeline
grafanaToken:

ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/healthcheck-port: traffic-port
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '15'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
    alb.ingress.kubernetes.io/success-codes: '200'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '2'


postgresql:
  enabled: true
  auth:
    password: "backstage" # I hard-coded a password because for some reason, when updating the backstage with a new image tag, the new backstage pod can't connect to the database:
                          # Backstage pod log: Backend failed to start up Error: Failed to connect to the database to make sure that 'backstage_plugin_catalog' exists, error: password authentication failed for user "bn_backstage"    
                          # Postgres pod log: FATAL:  password authentication failed for user "bn_backstage"

serviceAccount:
  create: true
