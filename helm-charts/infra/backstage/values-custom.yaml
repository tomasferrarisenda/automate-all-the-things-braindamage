backstage:
  command: ["node", "packages/backend", "--config", "app-config.production.yaml"]

  image:
    registry: "" # This is necessary to override the default value "ghcr.io"
    repository: tferrari92/backstage
    tag: "16" # This value was modified by the backstage build and push pipeline

  extraEnvVars:
    - name: GITHUB_TOKEN
      valueFrom:
        secretKeyRef:
          name: github-secret
          key: GITHUB_TOKEN
    - name: AUTH_GITHUB_CLIENT_ID
      valueFrom:
        secretKeyRef:
          name: github-secret
          key: AUTH_GITHUB_CLIENT_ID
    - name: AUTH_GITHUB_CLIENT_SECRET
      valueFrom:
        secretKeyRef:
          name: github-secret
          key: AUTH_GITHUB_CLIENT_SECRET  
    - name: ARGOCD_AUTH_TOKEN
      valueFrom:
        secretKeyRef:
          name: argocd-auth-token
          key: ARGOCD_AUTH_TOKEN
    - name: GRAFANA_TOKEN
      valueFrom:
        secretKeyRef:
          name: grafana-token
          key: GRAFANA_TOKEN

  appConfig:
    catalog:
      rules:
        - allow:
            - Component
            - API
            - Resource
            - System
            - Domain
            - Location
            - User
            - Group
            - Template

      refreshIntervalSeconds: 5 # In seconds. Default is 100

      providers:
        github:
          # Catalogs
          catalogsProvider:
            organization: 'tomasferrarisenda' # This value was modified by the initial-setup script
            catalogPath: '/application-code/**/*catalog-info.yaml' # this will search all folders for files that end in template.yaml
            filters:
              branch: 'main' # string
              repository: 'automate-all-the-things-transcendence' # Regex
            schedule: # same options as in TaskScheduleDefinition
              frequency: { minutes: 1 }
              timeout: { minutes: 3 }

          # Resources
          resourcesProvider:
            organization: 'tomasferrarisenda' # This value was modified by the initial-setup script
            catalogPath: '/crossplane-example-manifests/**/*catalog-info.yaml' # this will search all folders for files that end in template.yaml
            # catalogPath: '/application-code/**/*catalog-info.yaml' # this will search all folders for files that end in template.yaml
            filters:
              branch: 'main' # string
              repository: 'automate-all-the-things-transcendence' # Regex
            schedule: # same options as in TaskScheduleDefinition
              frequency: { minutes: 1 }
              timeout: { minutes: 3 }

          # APIs
          apisProvider:
            organization: 'tomasferrarisenda' # This value was modified by the initial-setup script
            catalogPath: '/application-code/**/*api-info.yaml' # this will search all folders for files that end in template.yaml
            filters:
              branch: 'main' # string
              repository: 'automate-all-the-things-transcendence' # Regex
            schedule: # same options as in TaskScheduleDefinition
              frequency: { minutes: 1 }
              timeout: { minutes: 3 }

          # Templates
          templatesProvider:
            organization: 'tomasferrarisenda' # This value was modified by the initial-setup script
            catalogPath: '/backstage/entities/templates/**/*template.yaml' # this will search all folders for files that end in template.yaml
            filters:
              branch: 'main' # string
              repository: 'automate-all-the-things-transcendence' # Regex
            schedule: # same options as in TaskScheduleDefinition
              frequency: { minutes: 1 }
              timeout: { minutes: 3 }

          # Systems
          systemsProvider:
            organization: 'tomasferrarisenda' # This value was modified by the initial-setup script
            catalogPath: '/backstage/entities/systems/**/*.yaml' # this will search all folders for files that end in .yaml
            filters:
              branch: 'main' # string
              repository: 'automate-all-the-things-transcendence' # Regex
            schedule: # same options as in TaskScheduleDefinition
              frequency: { minutes: 1 }
              timeout: { minutes: 3 }

          # Groups
          groupsProvider:
            organization: 'tomasferrarisenda' # This value was modified by the initial-setup script
            catalogPath: '/backstage/entities/groups/**/*.yaml' # this will search all folders for files that end in .yaml
            filters: # optional filters
              branch: 'main' # optional string
              repository: 'automate-all-the-things-transcendence' # optional Regex
            schedule: # same options as in TaskScheduleDefinition
              frequency: { minutes: 1 }
              timeout: { minutes: 3 }

          # Users
          usersProvider:
            organization: 'tomasferrarisenda' # This value was modified by the initial-setup script
            catalogPath: '/backstage/entities/users/**/*.yaml' # this will search all folders for files that end in .yaml
            filters: # optional filters
              branch: 'main' # optional string
              repository: 'automate-all-the-things-transcendence' # optional Regex
            schedule: # same options as in TaskScheduleDefinition
              frequency: { minutes: 1 }
              timeout: { minutes: 3 }


githubToken: AgAYA0lQw0K48MrjRoxMNjWSGFS7Zh7SAYbDLeVJS6diZl0lJTUv4svag7MJLbbH0IWJ0yxZJIEnkEMylXjf33aOaIOO/jj9hx3DGZwn9NjcWLTqPKceo/8oqX4z/X+yB84N1w2RE5U6cAegAeadfGnUsETcnoXiRFwwCGJ3DCZNBgdq9yhjnmIk39n/51Iu5WFI1tazm6ikBX3OvMJNggJXFcB+lzftKIIu9Bh75F54tHVTbe2Rdmfgi7L8wX/lWoRA6GxhCBgszikC1Y6StXvPn8s2RXszozvQ93UYFVbcGcC8AZ621UUcm1tiVhoPe14NPwBLNIY6s4nq5BZJLwgrfxOC/XwXZ05Xajoy9JbwEJviS2UA6aX0IYX+07m3uSup/XaTtx/MP8hPgwxlIQ0i8qf0imuhb1KHW5f6shSpFang6q+wY+WbaoqtQZwd3uVV4jENYnyD9IeS0Vbe7PLlzNpLUoD4yORjlDK9q3jU7e7Kde47eMAJzv/sTrUZkqoAyuA9oPWYKkXYzQXt0Nl0TkLTJeKMVwmxbQU9XUbrzJzQK+mzv3ZlxEXLOqvUxF1DBuc6nPz1TMDnr0WbX3K9F1S88xhpeOS4vAmeEhAN08G6yRmsfRZEC46fVWrjRcyDfzhqFeEvL7vTkejw43k63nXLG0vQnIzGP4ieKihGVm93IOD5ZjJdQ9zmo62KMV/9kjOWO72+uBvr/BeyQj6yeJyZyoba6pZ8TIu4Qfn2uUfiF4SylD4Z # This value was modified by the sealed-secrets pipeline
githubAuthClientId: AgBYEJ9I/7sDkxv3Vko8gKK/AyWxKjTXEW7o7SrvxswEi/JAesem5uc/gpC7mu71Iamn63OuAQaayi+WYklPzPp9RdEKedc86p720omoQ+tpZ9d+++leqeZ7YbLh9si2IaNX//8mpllAmuc+qGTxn4tkpK9b3ygtlnBsq5cFLjyHhMxXmX0wOZGWyv+euJbrH8f0NbQqYlFDN1FS9PNwxfwuMJs6V+PyCuP/A4fsRgPSIrx8dLLHa79s/+vpyLFUmljZPYpMaMDalku+9YFi6rSzQwi/spMz3ZNVdUUVjMsDYYLcbMr9Fsc/ISZHtABufjX+jSJCQ8NrC5e+HTxKLqd4PB0cH2nWSOwhwD2IghFxTyy1Ee5ku815ze81z7Gn1oSVjtp7erKATflhOxQqw69HLtkpZ5KRxa+UDXIiekNGak3CL4REK1ke0bCkryJm3XOu8+xchPfNyp2R4+g+0cFd4dBCDo4Z3v/U/MaPoqdiWhGThaGE4QByy4Vd3/3GZS45uEzj70EruGIMXdrXnGyWQChbWWL4LHFo1HV6fXQPHUSK2Qy5pphd2qScC4jW/HMwi/cXX//vN0Mp0J1etBxjN5bwP+G81t1yKonzq5wyxkQOoxdhRw5H9mLVKs/hww9hGzJNbeX3cr22IrdVG3jngYaHzOs88WpM3Pr+FZ0G19Bm1AtP9FirJJuzDJZoTF42gsl8y3+H2u9XC05VlNg2BujOYw== # This value was modified by the sealed-secrets pipeline
githubAuthClientSecret: AgC4Jm+eDaFOdtYTELQyMuoZFnX4t4S5YE9QeNWrRwBy1fD+GfW+dhtCSjMkrt9mhYiizdhyTgV93E8fz8g2WX0oT2mgASba/EyLtRWMi7gkx8jqyeAwzJOTAoPMhyXXgr5Ho9dGa9mMKG/YW95DBJe7UqQD5RLbUva222NKFqkRrFOz9VDygIoFNVouCJ9hyWh4Wsatn8IiPbxG4RSmmqwnPolyHYKCH+GZynMaIQCZE1iA1d1Vmuj3n7+hm+KoIaI9ThUHMmH8GTi+3PpZoiwLuv5xnX0b43fJZc942uW8NsiUZXOSXUWUZMY1ErXaRvn7mF/NxERt1w6gDFajwUpTwCYgQSpsxDQ4CyUagQ9mvyi9xLPUXZjqiyv9ruqvgeTwBVfDE/YgzJ2beHXxST5IZ7TqFFBJSsuPoTEQ37xf/qD+cuKO4AvR8TrR/lt3ye8SEnH45p+YrOHhT4HogTPtD6+vfi4+DDxTK7sLRhV0zorFhMBrM9FNVr6GJuBg/l81ikA9502XZB6gH886EGD+FQ3IJM1IO2GoPkj6XFihlsC+aPOSkVJ/A/jJ7pkjznPa6uhBocsIbFgteCXQPCrKr+5XedA+T3YFOwcD312FLEHk6WF4Y9j6b2NVxiztTS1JepwEPAFx0uFL81zEYWOf8a2xDoMDnvV7yIYTWkYSfl/mZWHpeHJAR8e+45T0RIzsy+5qdqWlurfio8JL87VM4nJm4TnnnMzmIW7+/1lZjcmi3RPM6KrZ # This value was modified by the sealed-secrets pipeline

argocdAuthToken: AgBmCbBEBf3gOhANwbEBFyO8qHyGUX3bEEjaOsD7OKqhcanK+EYRAhM/tu7KLsevvOZww+wm2ukoKvUdr9otxJgy6qeyCMXc+LPS3q6E1VQPJwVBsPzIm7Gz9CGrsiu0xJR5xdNmUtb7QJVMB4AqStQn5q9YS8CNTASaGFE1GiWNejx2tnpu72bdafxGAmsoCxWIhfcPv6KNScFTPL5frZ/gGVpNoF57OMX5GwsWE/iK3uFWVZMNJfUvMG6idkatmVnXJyg+JD29GH0AotCmJ+Oq94qanj2D5QA6vXjqqTuycKVG2w5yTWMX5ETyjBOWR5hEOlifBBDhB05m/fgnDxxQREu+K+aoh6oMnaF7zxH4PxyMProabKhXjLJGRnc21DwQGYcxXFGDLsZu7d4Z2A9BmU6nOHJMlQxAmW2M7rqojc/ataWoYiJR7DMtnOJhxXVF+7KiWjchZSv/71m584pYsq0s1Wte5oZYwltdWHcIbFwUB3LH8jFBd/mduJE+KNjjzDbQcm4M0DE8ssu/c18LAyjejyx/hJ29gxjXYMO53BGlqQYR/B2AI0/b9CMBQUEKqMa3xxipY4PhAVhE3EYlLHdzZBgzP6TMgNXAT5fALJsV02PNKnfU1qsFYF4ZfBTzggT6oNHnm7Wm+p9A4cheKJ48EhT2RzqRGmVU0B4gahNX8nOGEZ/mbseLzHsIFONj5c1BOnakmrA+V3YMPQi1Wn6SON+NKZbCkbox6eUmN55TsIJ1EKPkgnKvMzDFCvEo1kp81L4eIOio6qtPfPP2qQQMmgWAR/1q5aKjKhcgEjTMAxSodWp7FbvY/2qtIjlN+DDtMGjHC+7qvFA3mvfHRrO1EiZjV6vyv+bESRYz+ZvG0YThYJaAS/OBhsOZGoZKoQI5Zulg/7qMrD3LfcSypz4bZUAbb+inbmaxsRwVryRMrShrNlvvmZZhjeScjofhGo5oPJnvvjGmX4YITD26+KyBYJZdWpyEkl71Qdeq7L911UUdRDY1VYX/Rx1tIoblFsfL1s2VD/5eNleh # This value was modified by the sealed-secrets pipeline
grafanaToken:

ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/healthcheck-port: traffic-port
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '15'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
    alb.ingress.kubernetes.io/success-codes: '200'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '2'


postgresql:
  enabled: true
  auth:
    password: "backstage" # I hard-coded a password because for some reason, when updating the backstage with a new image tag, the new backstage pod can't connect to the database:
                          # Backstage pod log: Backend failed to start up Error: Failed to connect to the database to make sure that 'backstage_plugin_catalog' exists, error: password authentication failed for user "bn_backstage"    
                          # Postgres pod log: FATAL:  password authentication failed for user "bn_backstage"

serviceAccount:
  create: true
