backstage:
  command: ["node", "packages/backend", "--config", "app-config.production.yaml"]

  image:
    registry: "" # This is necessary to override the default value "ghcr.io"
    repository: tferrari92/backstage
    tag: "19" # This value was modified by the backstage build and push pipeline

  extraEnvVars:
    - name: GITHUB_TOKEN
      valueFrom:
        secretKeyRef:
          name: github-secret
          key: GITHUB_TOKEN
    - name: AUTH_GITHUB_CLIENT_ID
      valueFrom:
        secretKeyRef:
          name: github-secret
          key: AUTH_GITHUB_CLIENT_ID
    - name: AUTH_GITHUB_CLIENT_SECRET
      valueFrom:
        secretKeyRef:
          name: github-secret
          key: AUTH_GITHUB_CLIENT_SECRET  
    - name: ARGOCD_AUTH_TOKEN
      valueFrom:
        secretKeyRef:
          name: argocd-auth-token
          key: ARGOCD_AUTH_TOKEN
    - name: GRAFANA_TOKEN
      valueFrom:
        secretKeyRef:
          name: grafana-token
          key: GRAFANA_TOKEN

  appConfig:
    catalog:
      rules:
        - allow:
            - Component
            - API
            - Resource
            - System
            - Domain
            - Location
            - User
            - Group
            - Template

      refreshIntervalSeconds: 5 # In seconds. Default is 100

      providers:
        github:
          # Catalogs
          catalogsProvider:
            organization: 'tomasferrarisenda' # This value was modified by the initial-setup script
            catalogPath: '/application-code/**/*catalog-info.yaml' # this will search all folders for files that end in template.yaml
            filters:
              branch: 'main' # string
              repository: 'automate-all-the-things-transcendence' # Regex
            schedule: # same options as in TaskScheduleDefinition
              frequency: { minutes: 1 }
              timeout: { minutes: 3 }

          # Resources
          resourcesProvider:
            organization: 'tomasferrarisenda' # This value was modified by the initial-setup script
            catalogPath: '/helm-charts/infra/crossplane-managed-resources/**/*catalog-info.yaml' # this will search all folders for files that end in template.yaml
            # catalogPath: '/application-code/**/*catalog-info.yaml' # this will search all folders for files that end in template.yaml
            filters:
              branch: 'main' # string
              repository: 'automate-all-the-things-transcendence' # Regex
            schedule: # same options as in TaskScheduleDefinition
              frequency: { minutes: 1 }
              timeout: { minutes: 3 }

          # APIs
          apisProvider:
            organization: 'tomasferrarisenda' # This value was modified by the initial-setup script
            catalogPath: '/application-code/**/*api-info.yaml' # this will search all folders for files that end in template.yaml
            filters:
              branch: 'main' # string
              repository: 'automate-all-the-things-transcendence' # Regex
            schedule: # same options as in TaskScheduleDefinition
              frequency: { minutes: 1 }
              timeout: { minutes: 3 }

          # Templates
          templatesProvider:
            organization: 'tomasferrarisenda' # This value was modified by the initial-setup script
            catalogPath: '/backstage/entities/templates/**/*template.yaml' # this will search all folders for files that end in template.yaml
            filters:
              branch: 'main' # string
              repository: 'automate-all-the-things-transcendence' # Regex
            schedule: # same options as in TaskScheduleDefinition
              frequency: { minutes: 1 }
              timeout: { minutes: 3 }

          # Systems
          systemsProvider:
            organization: 'tomasferrarisenda' # This value was modified by the initial-setup script
            catalogPath: '/backstage/entities/systems/**/*.yaml' # this will search all folders for files that end in .yaml
            filters:
              branch: 'main' # string
              repository: 'automate-all-the-things-transcendence' # Regex
            schedule: # same options as in TaskScheduleDefinition
              frequency: { minutes: 1 }
              timeout: { minutes: 3 }

          # Groups
          groupsProvider:
            organization: 'tomasferrarisenda' # This value was modified by the initial-setup script
            catalogPath: '/backstage/entities/groups/**/*.yaml' # this will search all folders for files that end in .yaml
            filters: # optional filters
              branch: 'main' # optional string
              repository: 'automate-all-the-things-transcendence' # optional Regex
            schedule: # same options as in TaskScheduleDefinition
              frequency: { minutes: 1 }
              timeout: { minutes: 3 }

          # Users
          usersProvider:
            organization: 'tomasferrarisenda' # This value was modified by the initial-setup script
            catalogPath: '/backstage/entities/users/**/*.yaml' # this will search all folders for files that end in .yaml
            filters: # optional filters
              branch: 'main' # optional string
              repository: 'automate-all-the-things-transcendence' # optional Regex
            schedule: # same options as in TaskScheduleDefinition
              frequency: { minutes: 1 }
              timeout: { minutes: 3 }


githubToken: AgA3+PtdY910qAYWJBz7t7/0gzMqyydA+uINvOW790jF1h1H8fvEQFsxmG6Fr+88JmkD3hnwc9yPCtHN15T6lOrTlIjKiYJTR/T9gBdGtBEyVcKkVOM5Mmf7DhCzQXZJlBFthMPiB89rqT6ub5/hGw6CDBanJOwMvCQ/n0fXFD5qW/chOc6B55JrO/v16ApD3vw8G7Se1mcKklqE2X8Rp8cU/HMBoc7u8T8vqhiJjpw8sY7hArSP5XuBPo4h99ankUkaV3SvZC+SqhdtfvJtAKUnqCUq4wjYqVmF5SHQ5dzIhLP7Eu+gJGJVYqwwFoN14UxlZLyxJ1coYBcdh7bPn0GbcjfOmW5ELk9eEj80h6reaB0oAsW7HMa13pmuQV93VwF6vIA3n+YrjlDiVa1jhrw2fWfxZqvV3jQeVzOld9eawszb7rlELfV2x9nCZ5hlwEcsDwm9797/8Urg649uvCaS0lOALaNnprIXRWZv4RbhydeSS6++PJgVRxX4xKRgWUO4t+riUf+n9LcHapOjRs+8hXMwBUjyLBvo6iXunLjAH3bbjBYi4gPvfrOwTAaC7tHyFRmtxNCbvk5j0vFFCxBge0gK+kyJVyEc2jrp8c3km/8haPT4fMk+Ve1HTFHCY1w8WdsHyL5dibbCnQ1muQzXpVFliWxG1k8+RtdGjMa53XYxUEDqt1e53gLvEMvmmbGwZ6G9DO30pAyNgAt99O2CYTCDly2qYDdeG8f1ylyWj9tvIvX7+J8H # This value was modified by the sealed-secrets pipeline
githubAuthClientId: AgCXrFQqmZCKTGczIAYwiWZUcyl2zySBpOE8Mq8GkVplx9C8PkYD6tUC5soY52bi63tOySrkQSNy7tdbcC20GJh0SLrpHC06jwUfmdy/hw+5orM7XzviP97xhXFHy6IdO1RwOSrxXhjhQgMIQyy363GRi2wdXDuorfwyoEX19T1Qgw8TXT/ntJF9Yk9/GW8sAolnXhCMvP+vaQ24X15GM7g+SFPISl4sbC3F+oeGz5UGRiZYjbCQFyCakPP5RGy1pnCZ5trgwUCNwbX56e2bvCzF6X7n3iuVh7X4zaitrQUQJKni+0QP8aPrfvKXJYGTo+8Z95FheWyWeSswxVHYAVBoiPnz1wKWBtcjKiWTmDdwatBvcnJaCcBvpBteEa4oMK2Ezvf5f7ysxoEg436KIpMsZSrjGoel0lGZw1Hdfo37tARyizqCCcB4WKafq/7O2AkFQNIwj3FNtxJ6B3LY0TCvy6k7p5nELAPDSEMRQV+vgOQGDw7fxSiJeRVc9yhZ5RF88KF3lGa5YqApjmjq9rI2/KjYH7aTZBCntOw+5V3OzbVmGWr0PfIIaoy+/lgSIpV0Fj9encoNvRWI53x0KcHFEO+0bx383OtgreVxkGoZ0TijEKyQE4YLHgzfkB33icO5hVnFv1QIcfF4qAvp3ZTUhNjWAxxqNsU5Hut+H5Q6lTbRR1H7HnmFh+rSmnym1HmO1ixffEk7BpLa5Ezwr3841YeEhA== # This value was modified by the sealed-secrets pipeline
githubAuthClientSecret: AgC75izwg26n1lbHLx6bZTtI4HRpGtnIVkyWhwf+JwI454jkRCktui5lMCmZ0g9GUMZuB/e2Rv6yrHJOjvP69G44EbLUq6A0R0NovfCPNvuj9SjOoaGw4yJS9xWiyUhD5sw5liPw+wTSpf5zT/wBrTNY0uSUnkAL8d+rMgVwtNPBNcwkyiDlhkIV2YcsWpS8f7vAikrA3rLMB1jkbKga5z0Isv5YdpiEJkZUhovi0FBlwKEtL0CSNJhBOhbdAVGfsh64dFYiADfIVVbALm9iUKEZ3JY+jBeHixKYEjoRTTmz8T4lV7DSRGQQbHfBW0UzvAvXMFtKHsSLK6JtiOpVfLWckKOVyD/D1B2k4GygjyMALg0Thfz1BxgcgGzDy1TSaavz9NeagZyIH6LfhnX0/Si6Zc6lNEQez1kAnR1kDOJ0dXaiZDub1dbDgLAEq86sd6g52+Mk/wPUndirfnO6oRbcctXM2lOkze80X2Ad93gVPxN8ztk2FodrcSIQWiBKokoWHYsJiNFdRaDdgudphsw/ZASPXhjDZTfgKJbX4admne0N3PZjFQWllwOq9vBuyL+1XWmlWsts8XSSibNZ9mFaidDWF1E/BGvCasW9NPKy9GAQ3WOwX/YXokyc0rp6Y9QEayUhNcWNUkyQ+tIHfihFUu9xq1jt5PXfSPCkGUFKt0AydB+d2ct0SJ/ss6UOqZvs1xtZA7SZ+JPTfcbDtYDfOqE2D46tjqwgjauA7nSzXVbCtAIK1pV5 # This value was modified by the sealed-secrets pipeline

argocdAuthToken: AgCgQY0dADpqqeyqZcch58XxlGw7wslUMnsTzkdxdL4//Y5GVekHr41VDECMfuJZ4Xly+EoPmOETIhQ1C+RnpsoS6Dd06soR7fSo/hUvGJfwu9qnbnYJapAnco/VN+JKHj8I69816uNtIjlzQlQX0tsqpJbex8eaeCfvlqe4PCkv3xw8ubZfDK+/FpR7ycf62p2C1SI492rMZZKboWJRolza/pUz7JT1sRw7ro436M/4IyhW7R9FMg3UimZ8BcYcH5iWXcEjRiJCC5aj7hnvqv/AYvYmiotTxBbZ+a5AiTUnyuYWUW95RfHdrk3+Z8M+eAidi7oQN41WOPGajY5d3vRS7tytZx3wO18dSk7yVZVcc7DOYvcqhjtLBrjRV9VRtJmSDC/zqQ1ES3FRdN/nkOONJ+hCJeAfZlY4OjUNy3s5XSgHox7+xsRoe0XMyNLA5LM2AzTpFc3k58cisSyoGVRCJXkzC6Tk8mTa2e3noI2RMZTKYlqORZj6ttx5zBUdFL0A50xBv54bY//wrBv2jBY8deRH682tGLR1IeRdwjRE9O6mRmZvxq8xMhQ5Mu4oXYapKQuMog0AjP43m/zb838OMSFGoJ8JeHwo8Ue5tk+12mwT69assqfS/fT/dB2ncOttWalhdaHnTpiPb6z8T5lnhJQ1yLpuhsnoCIedhMdJYFxtDCaTwMxTWtFEYdfG5MUwyoBCKH416Ep2N86hS98C61OTi9cua2ZRgU0WfmGDIM99vi6F1scvwQRoBy+RzU93AaDAvYfDSVOSz+LDDjK4F0s03B7IZFyTmZpiUrlbF2gXtWQ1Ky0xRFjxMzxoWR8ntLZAyJXXn80efyILsxFZ3nGvGhBChD7+sGqjwetJSVyp8TzW3vGFYa7W3ZUKt31FirAfUvzz3exlIAkXYP2rtzDVq2ti452obKeR6YN/OvnQhWzLJyrDg1cf7wwh+CGx3hSpfS7rb0s8l0TDsSoJ6efU/eFopQ8UbYpIqAeuhObu7TOM7ula2Cng87Wj5WqjuNgK3wQBX0bgOZ6J # This value was modified by the sealed-secrets pipeline
grafanaToken: AgDProddW9PwJwtHLWywVUz0GMb/GKUs8fUhqCY7Buv0rnuAl901OMbA2k57qoruZbrzyQdGOU8DPc89Umgj9FQ5fPwNx7cZjVppMFdzFQ5IUCqhASEECA9tdeN87pkx21QuRtEuJz0remL36QMEC+ehnRvHPkVb7nSKfuKNJPWegn+2kyTuI/A/PqBooKeeFTmsyp1qTmqc7HKuG5rbWVUccnxBHWjAfRFAaW6FN5IuVZdf3spLUxow8wKCK1C92yh/qQwgBDFnEfBI8y6qHv8oscnHtRevTCp4XR6huQFHTb8PVvzAXmwMjH8muj8UVw6g5eKESh7y0i5Xfad11ZeUWHVbGLciaHkKImxOwpNzvspEk7QJRHSRSe14BbQ6fN1Mp/6q8nJBgIsgTE23FD6XtR4vidQvzZxm+LhgVVJsBZItk+oryWzvm8KX4wkrK5wPimTcQsKn5w84Hs/gw3Cj1bqAcDXITN35ttKCw5I8zUNpObVmEv5p6+8TI8+1jJWknYVQ0mMPtxTQEyh+igItCwMUaLizif33aqV0eLj5HsY5vGzmHepaICBMLoMudKK9csNtZPnqPl2LKP/w3PC8QKZSK0hWHgLZK9nIWod233k2WuI+ecn8SxcoygTMe1AtNoFT2XW49rIV4PuJSy8WMd6B5Bh6ctMaiuQbGyVC6M+CyH1yVAy77CKHyB3VDcahF1dnQUK1PN9k05Pd1eJHlv2BXuzzx+IaCUq1f+8UaMnJI1O4lOx9oDnSwacE # This value was modified by the sealed-secrets pipeline

ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/healthcheck-port: traffic-port
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '15'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
    alb.ingress.kubernetes.io/success-codes: '200'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '2'


postgresql:
  enabled: true
  auth:
    password: "backstage" # I hard-coded a password because for some reason, when updating the backstage with a new image tag, the new backstage pod can't connect to the database:
                          # Backstage pod log: Backend failed to start up Error: Failed to connect to the database to make sure that 'backstage_plugin_catalog' exists, error: password authentication failed for user "bn_backstage"    
                          # Postgres pod log: FATAL:  password authentication failed for user "bn_backstage"

serviceAccount:
  create: true
